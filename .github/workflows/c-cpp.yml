name: Build Artifacts

on: [push, pull_request, workflow_dispatch]

env:
  WIN_BOOTSTRAP_URL: "https://raw.githubusercontent.com/danielga/garrysmod_common/master/build/bootstrap.ps1"
  WIN_BUILD_SCRIPT: "dependencies/garrysmod_common/build/build.ps1"
  WIN_PREMAKE: "https://github.com/danielga/garrysmod_common/releases/download/premake-build%2F5.0.0-beta1/premake-5.0.0-beta1-windows.zip"
  WIN_PREMAKE_PLATFORM: "vs2022"
  
  LINUX_BOOTSTRAP_URL: "https://raw.githubusercontent.com/danielga/garrysmod_common/master/build/bootstrap.sh"
  LINUX_BUILD_SCRIPT: "dependencies/garrysmod_common/build/build.sh"
  LINUX_PREMAKE: "https://github.com/danielga/garrysmod_common/releases/download/premake-build%2F5.0.0-beta1/premake-5.0.0-beta1-linux.tar.gz"
  LINUX_PREMAKE_PLATFORM: "gmake"

jobs:
  windows:
    strategy:
      fail-fast: false

    runs-on: windows-2019
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Checkout Garrysmod Common
      uses: actions/checkout@v3
      with:
        repository: danielga/garrysmod_common
        path: dependencies/garrysmod_common
        submodules: recursive

    - name: Find Visual Studio
      run: |
        $installationPath = Get-VSSetupInstance `
          | Select-VSSetupInstance -Require Microsoft.VisualStudio.Workload.NativeDesktop -Latest `
          | Select-Object -ExpandProperty InstallationPath
        Write-Output "VSDEVCMD=${installationPath}\Common7\Tools\VsDevCmd.bat" `
          | Out-File -FilePath "${Env:GITHUB_ENV}" -Append
          
    - name: Garrysmod Common build
      run: |
        Invoke-Expression ((New-Object System.Net.WebClient).DownloadString("{{env.WIN_BOOTSTRAP_URL}}"))
        & "dependencies/garrysmod_common/build/build.ps1"
        
    - name: Premake
      run: |
        Invoke-WebRequest ${{env.WIN_PREMAKE}} -OutFile "premake.zip"
        Expand-Archive premake.zip
        ./premake.exe ${{env.WIN_PREMAKE_PLATFORM}}
        XCopy "source/*.*" "projects/windows/vs2022"

    - name: Build MSVC x86
      run: |
        & "${Env:COMSPEC}" /s /c "`"${Env:VSDEVCMD}`" -arch=x86 -host_arch=x64 -no_logo && set" `
          | % { , ($_ -Split '=', 2) } `
          | % { [System.Environment]::SetEnvironmentVariable($_[0], $_[1]) }
        devenv "gmod-clearcache\projects\windows\vs2022\clearcache.sln" /upgrade
        msbuild "gmod-clearcache\projects\windows\vs2022\clearcache.sln" /nodeReuse:false /t:Rebuild /p:Configuration=Release /p:Platform=x86 /m /v:minimal

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: gmsv_clearcache_win32
        path: ${{ matrix.source_branch }}/game
        if-no-files-found: error

  linux:
    strategy:
      fail-fast: false

    runs-on: ubuntu-latest
    container: debian:bullseye
    steps:
    - name: Install Dependencies
      run: |
        dpkg --add-architecture i386
        apt update
        apt install -y build-essential git libstdc++6:i386 gcc-multilib g++-multilib

    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Checkout Garrysmod Common
      uses: actions/checkout@v3
      with:
        repository: danielga/garrysmod_common
        path: dependencies/garrysmod_common
        submodules: recursive

    - name: Build Garrysmod Common
      run: |
        curl -s -L "${{env.LINUX_BOOTSTRAP_URL}}" | bash
        ${{env.LINUX_BUILD_SCRIPT}}

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: gmsv_clearcache_linux32
        path: ${{ matrix.source_branch }}/game
        if-no-files-found: error
